/*
Do not edit this file!

This file was generated by FigmaExport, any changes made
to it will be lost the next time the file is generated.

For more details see https://github.com/RedMadRobot/figma-export
*/
package ru.mobileup.template.core.theme.values

import androidx.compose.runtime.Composable
import androidx.compose.runtime.ReadOnlyComposable
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.res.colorResource
import ru.mobileup.template.core.R

object Colors

@Composable
@ReadOnlyComposable
fun Colors.brand(): Color = colorResource(id = R.color.brand)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundCardA(): Color = colorResource(id = R.color.light_mode_background_card_a)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundCardB(): Color = colorResource(id = R.color.light_mode_background_card_b)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundCardC(): Color =
    colorResource(id = R.color.light_mode_background_card_—Å)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundCardD(): Color =
    colorResource(id = R.color.light_mode_background_card_d)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundInput(): Color =
    colorResource(id = R.color.light_mode_background_input)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundScreen(): Color =
    colorResource(id = R.color.light_mode_background_screen)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundSnackbar(): Color =
    colorResource(id = R.color.light_mode_background_snackbar)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBackgroundToast(): Color =
    colorResource(id = R.color.light_mode_background_toast)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBorderActive(): Color = colorResource(id = R.color.light_mode_border_active)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBorderInputInvert(): Color =
    colorResource(id = R.color.light_mode_border_input_invert)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBorderInvert(): Color = colorResource(id = R.color.light_mode_border_invert)

@Composable
@ReadOnlyComposable
fun Colors.lightModeBorderPrimary(): Color = colorResource(id = R.color.light_mode_border_primary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeButtonPrimary(): Color = colorResource(id = R.color.light_mode_button_primary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeButtonPrimaryDisabled(): Color = colorResource(id = R.color.light_mode_button_primary_disabled)

@Composable
@ReadOnlyComposable
fun Colors.lightModeButtonPrimaryInevrt(): Color = colorResource(id = R.color.light_mode_button_primary_inevrt)

@Composable
@ReadOnlyComposable
fun Colors.lightModeButtonPrimaryPressed(): Color = colorResource(id = R.color.light_mode_button_primary_pressed)

@Composable
@ReadOnlyComposable
fun Colors.lightModeButtonSuccess(): Color = colorResource(id = R.color.light_mode_button_success)

@Composable
@ReadOnlyComposable
fun Colors.lightModeChipsDefault(): Color = colorResource(id = R.color.light_mode_chips_default)

@Composable
@ReadOnlyComposable
fun Colors.lightModeChipsSelected(): Color = colorResource(id = R.color.light_mode_chips_selected)

@Composable
@ReadOnlyComposable
fun Colors.lightModeIconPrimary(): Color = colorResource(id = R.color.light_mode_icon_primary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeIconPrimaryInvert(): Color = colorResource(id = R.color.light_mode_icon_primary_invert)

@Composable
@ReadOnlyComposable
fun Colors.lightModeIconSecondary(): Color = colorResource(id = R.color.light_mode_icon_secondary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeIconSuccess(): Color = colorResource(id = R.color.light_mode_icon_success)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTagsGreenBg(): Color = colorResource(id = R.color.light_mode_tags_green_bg)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTagsGreenText(): Color = colorResource(id = R.color.light_mode_tags_green_text)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTagsRedBg(): Color = colorResource(id = R.color.light_mode_tags_red_bg)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTagsRedText(): Color = colorResource(id = R.color.light_mode_tags_red_text)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextCaptionPrimary(): Color = colorResource(id = R.color.light_mode_text_caption_primary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextCaptionSecondary(): Color = colorResource(id = R.color.light_mode_text_caption_secondary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextError(): Color = colorResource(id = R.color.light_mode_text_error)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextInput(): Color = colorResource(id = R.color.light_mode_text_input)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextPrimary(): Color = colorResource(id = R.color.light_mode_text_primary)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextPrimaryInvert(): Color = colorResource(id = R.color.light_mode_text_primary_invert)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTextSuccess(): Color = colorResource(id = R.color.light_mode_text_success)

@Composable
@ReadOnlyComposable
fun Colors.system0(): Color = colorResource(id = R.color.system_0)

@Composable
@ReadOnlyComposable
fun Colors.system1(): Color = colorResource(id = R.color.system_1)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTagsPending(): Color = colorResource(id = R.color.light_mode_tags_pending)

@Composable
@ReadOnlyComposable
fun Colors.lightModeTagsPendingBg(): Color = colorResource(id = R.color.light_mode_tags_pending_bg)
